/* This file is autogenerated by xbvcgen, DO NOT EDIT! */
#ifndef _XBVC_CORE_H_
#define _XBVC_CORE_H_

#include <stdint.h>

/* Message types */
enum xbvc_messages {
	{% for msg in msgs %}
	E_MSG_{{msg.name.upper()}} = {{msg.msg_id}},
	{% endfor %}
	E_MSG_MAX,
};

/* Enumerations */
{% for enum in enumerations%}
enum {{enum.name}} {
	{% for pair in enum.enum_pairs%}
	{{pair[0]}} = {{pair[1]}},
	{% endfor %}
};

{% endfor %}

/* Message Structures */
{% for msg in msgs %}
struct x_{{msg.name}} {
	{% for pair in msg.value_pairs %}
	{{pair['type']}} {{pair['field_name']}};
	{% endfor %}
};

{% endfor %}
/* Handler Prototypes */

/* These are to be implemented by the end user! */

{% for p in prototypes %}
{{p}};
{% endfor %}

/* Platform handler prototypes */
typedef int (*xbvc_data_handler)(uint8_t *, int);
typedef void (*xbvc_platform_init_handler)(void*);

/* XBVC API */
void xbvc_init(void *params,
	       xbvc_data_handler read,
	       xbvc_data_handler write,
	       xbvc_platform_init_handler platform_init);

void xbvc_run(void);
int xbvc_send(void *msg, uint32_t msg_type);
	
#endif /* XBVC_CORE_H */
